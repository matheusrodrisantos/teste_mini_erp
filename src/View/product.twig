<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <title>{{ title }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>
    <style>
        body {
            background-color: #fafafa;
            font-family: 'Helvetica Neue', Arial, sans-serif;
            padding: 50px;
            margin: 0;
            color: #333;
        }
        .container {
            max-width: 900px;
            background-color: #fff;
            padding: 40px;
            border-radius: 8px;
        }
        h1 {
            font-size: 1.8rem;
            font-weight: 500;
            color: #222;
            text-align: center;
            margin-bottom: 30px;
        }
        p.text-muted {
            font-size: 0.95rem;
            text-align: center;
            margin-bottom: 40px;
        }
        .form-section {
            padding: 0;
            margin-bottom: 50px;
            border: none;
        }
        h2 {
            font-size: 1.4rem;
            font-weight: 500;
            color: #222;
            margin-bottom: 25px;
        }
        .form-label {
            font-size: 0.9rem;
            font-weight: 400;
            color: #444;
        }
        .form-control {
            border: 1px solid #e0e0e0;
            border-radius: 6px;
            font-size: 0.95rem;
            padding: 10px;
            background-color: #f9f9f9;
        }
        .form-control:focus {
            border-color: #007bff;
            box-shadow: none;
            background-color: #fff;
        }
        .btn-primary {
            background-color: #007bff;
            border: none;
            border-radius: 6px;
            padding: 10px 20px;
            font-size: 0.95rem;
            font-weight: 400;
        }
        .btn-primary:hover {
            background-color: #0062cc;
        }
        .btn-secondary {
            background-color: #e0e0e0;
            color: #333;
            border: none;
            border-radius: 6px;
            padding: 10px 20px;
            font-size: 0.95rem;
            font-weight: 400;
        }
        .btn-secondary:hover {
            background-color: #d0d0d0;
        }
        .btn-info, .btn-danger {
            border-radius: 6px;
            padding: 6px 12px;
            font-size: 0.85rem;
            font-weight: 400;
        }
        .table {
            font-size: 0.95rem;
            border-collapse: collapse;
        }
        .table th {
            background-color: #f5f5f5;
            color: #333;
            font-weight: 500;
            padding: 12px;
            border-bottom: 1px solid #e0e0e0;
        }
        .table td {
            padding: 12px;
            border-bottom: 1px solid #e0e0e0;
            vertical-align: middle;
        }
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f9f9f9;
        }
        .table tbody tr:hover {
            background-color: #f0f0f0;
        }
        hr {
            border: none;
            border-top: 1px solid #e0e0e0;
            margin: 50px 0;
        }
        .list-unstyled li {
            font-size: 0.9rem;
            color: #444;
            margin-bottom: 4px;
        }
        .form-text {
            font-size: 0.85rem;
            color: #666;
        }
        .d-flex.gap-2 {
            gap: 10px;
        }
        @media (max-width: 768px) {
            body {
                padding: 20px;
            }
            .container {
                padding: 20px;
            }
            h1 {
                font-size: 1.5rem;
            }
            h2 {
                font-size: 1.2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Gerenciamento de Produtos</h1>
        <p class="text-muted">Gerencie seus produtos de forma simples e eficiente.</p>

        <div class="form-section">
            <h2>Cadastrar/Editar Produto</h2>
            <form id="productForm">
                <input type="hidden" id="productId">

                <div class="mb-3">
                    <label for="productName" class="form-label">Nome do Produto</label>
                    <input type="text" class="form-control" id="productName" required>
                </div>

                <div class="mb-3">
                    <label for="productPrice" class="form-label">Preço</label>
                    <input type="number" class="form-control" id="productPrice" step="0.01" min="0" required>
                </div>

                <div class="mb-3">
                    <label for="productStock" class="form-label">Estoque Principal</label>
                    <input type="number" class="form-control" id="productStock" min="0" required>
                </div>

                <div class="mb-3">
                    <label for="productVariations" class="form-label">Variações (ex: P, M, G)</label>
                    <input type="text" class="form-control" id="productVariations">
                    <small class="form-text">Separe por vírgulas para gerenciar estoques individualmente.</small>
                </div>

                <div id="variationStockSection" style="display: none;">
                    <h4>Estoque por Variação</h4>
                    <div id="variationStockInputs"></div>
                </div>

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary">Salvar</button>
                    <button type="button" class="btn btn-secondary" id="clearFormBtn">Limpar</button>
                </div>
            </form>
        </div>

        <hr>

        <div class="form-section">
            <h2>Lista de Produtos</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nome</th>
                        <th>Preço</th>
                        <th>Estoque</th>
                        <th>Variações</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody id="productList"></tbody>
            </table>
        </div>
    </div>

    <script>
        let products = [];
        let nextProductId = 1;

        function renderProducts() {
            const productList = document.getElementById('productList');
            productList.innerHTML = '';

            products.forEach(product => {
                const row = productList.insertRow();
                row.insertCell().textContent = product.id;
                row.insertCell().textContent = product.name;
                row.insertCell().textContent = `R$ ${product.price.toFixed(2)}`;
                row.insertCell().textContent = product.stock;

                const variationsCell = row.insertCell();
                if (product.variations && product.variations.length > 0) {
                    const ul = document.createElement('ul');
                    ul.classList.add('list-unstyled', 'mb-0');
                    product.variations.forEach(v => {
                        const li = document.createElement('li');
                        li.textContent = `${v.name} (Estoque: ${v.stock})`;
                        ul.appendChild(li);
                    });
                    variationsCell.appendChild(ul);
                } else {
                    variationsCell.textContent = 'Nenhuma';
                }

                const actionsCell = row.insertCell();
                const editButton = document.createElement('button');
                editButton.textContent = 'Editar';
                editButton.classList.add('btn', 'btn-sm', 'btn-info', 'me-2');
                editButton.onclick = () => editProduct(product.id);
                actionsCell.appendChild(editButton);

                const deleteButton = document.createElement('button');
                deleteButton.textContent = 'Excluir';
                deleteButton.classList.add('btn', 'btn-sm', 'btn-danger');
                deleteButton.onclick = () => deleteProduct(product.id);
                actionsCell.appendChild(deleteButton);
            });
        }

        function editProduct(id) {
            const product = products.find(p => p.id === id);
            if (product) {
                document.getElementById('productId').value = product.id;
                document.getElementById('productName').value = product.name;
                document.getElementById('productPrice').value = product.price;
                document.getElementById('productStock').value = product.stock;
                document.getElementById('productVariations').value = product.variations.map(v => v.name).join(', ');
                updateVariationStockInputs();
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function deleteProduct(id) {
            if (confirm('Tem certeza que deseja excluir este produto?')) {
                products = products.filter(p => p.id !== id);
                renderProducts();
                clearForm();
            }
        }

        function clearForm() {
            document.getElementById('productForm').reset();
            document.getElementById('productId').value = '';
            document.getElementById('variationStockSection').style.display = 'none';
            document.getElementById('variationStockInputs').innerHTML = '';
        }

        function updateVariationStockInputs() {
            const variationsInput = document.getElementById('productVariations').value;
            const variationStockSection = document.getElementById('variationStockSection');
            const variationStockInputsDiv = document.getElementById('variationStockInputs');
            variationStockInputsDiv.innerHTML = '';

            const variations = variationsInput.split(',').map(v => v.trim()).filter(v => v !== '');

            if (variations.length > 0) {
                variationStockSection.style.display = 'block';
                const productId = document.getElementById('productId').value;
                const currentProduct = products.find(p => p.id === parseInt(productId));

                variations.forEach(variationName => {
                    const div = document.createElement('div');
                    div.classList.add('mb-3');
                    div.innerHTML = `
                        <label for="stock-${variationName.replace(/\s/g, '-')}" class="form-label">Estoque para ${variationName}</label>
                        <input type="number" class="form-control" id="stock-${variationName.replace(/\s/g, '-')}" min="0" value="0">
                    `;
                    variationStockInputsDiv.appendChild(div);

                    if (currentProduct && currentProduct.variations) {
                        const existingVariation = currentProduct.variations.find(v => v.name === variationName);
                        if (existingVariation) {
                            document.getElementById(`stock-${variationName.replace(/\s/g, '-')}`).value = existingVariation.stock;
                        }
                    }
                });
            } else {
                variationStockSection.style.display = 'none';
            }
        }

        document.getElementById('productVariations').addEventListener('input', updateVariationStockInputs);

        document.getElementById('productForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const productId = document.getElementById('productId').value;
            const name = document.getElementById('productName').value;
            const price = parseFloat(document.getElementById('productPrice').value);
            const stock = parseInt(document.getElementById('productStock').value);
            const variationsInput = document.getElementById('productVariations').value;

            const variations = variationsInput.split(',').map(v => v.trim()).filter(v => v !== '').map(variationName => {
                const stockInput = document.getElementById(`stock-${variationName.replace(/\s/g, '-')}`);
                return {
                    name: variationName,
                    stock: stockInput ? parseInt(stockInput.value) : 0
                };
            });

            if (productId) {
                const productIndex = products.findIndex(p => p.id === parseInt(productId));
                if (productIndex !== -1) {
                    products[productIndex] = { id: parseInt(productId), name, price, stock, variations };
                }
            } else {
                const newProduct = {
                    id: nextProductId++,
                    name,
                    price,
                    stock,
                    variations
                };
                products.push(newProduct);
            }

            renderProducts();
            clearForm();
        });

        document.getElementById('clearFormBtn').addEventListener('click', clearForm);

        document.addEventListener('DOMContentLoaded', renderProducts);
    </script>
</body>
</html>